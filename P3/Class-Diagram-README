Some descriptions for use cases:

Turn:
Turns are generated by the MatchController, as it contains the match object and keeps track of whose turn it is.
Turns are stored in the user profile, since they are specific to each user and need to be accessed when that user connects to the server.
Turns are submitted from the UI, which interfaces with the FacadeController to convert user actions into system actions. 
The FacadeController's submitTurn() method calls the SystemController's submitTurn() method, which does two things:
  1.) Remove the turn from the UserProfile using the removeTurn() method in the UserProfile class. It gets the UserProfile object through the getSelectedProfile() method of the UserController.
  2.) Processes the turn and updates the match by calling the updateMatch() method of the MatchController. 
       - The MatchController checks if it is a valid move with the validateTurn() method, gets the board from the Match object, modifies the board, and then gives it back to the Match object with the updateBoard() method. 
After this is done, the user view is updated to reflect the new changes.
